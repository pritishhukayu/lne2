trigger:
  branches:
    include:
      - main

pool:
  vmImage: 'ubuntu-latest'

variables:
  azureServiceConnection: 'lneArmServiceConnection'
  resourceGroupName: 'lne-PritishRG'
  location: 'Central India'
  acrName: 'lneacr'
  aksClusterName: 'lneakscluster'
  aciName: 'lneaci'
  mysqlServerName: 'lnemysqlserver'
  mysqlAdminUsername: 'lneadminuser'
  mysqlAdminPassword: 'lneadminpassword'
  dockerImages: |
    lneacr.azurecr.io/lnenoderepo:50
    lneacr.azurecr.io/lnereactrepo:46

stages:
- stage: Deploy
  jobs:
  - job: Terraform
    steps:
    - checkout: self

    - task: UsePythonVersion@0
      inputs:
        versionSpec: '3.x'
        addToPath: true

    - script: |
        python -m pip install --upgrade pip
        pip install azure-cli
      displayName: 'Install Azure CLI'

    - task: AzureCLI@2
      inputs:
        azureSubscription: $(azureServiceConnection)
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: |
          az login --service-principal -u $(servicePrincipalId) -p $(servicePrincipalKey) --tenant $(tenantId)

    - task: TerraformInstaller@0
      inputs:
        terraformVersion: '1.0.7'

    - script: |
        terraform init
      workingDirectory: $(System.DefaultWorkingDirectory)/terraform
      displayName: 'Terraform Init'

    - script: |
        terraform plan -var "resource_group_name=$(resourceGroupName)" \
                       -var "location=$(location)" \
                       -var "acr_name=$(acrName)" \
                       -var "aks_cluster_name=$(aksClusterName)" \
                       -var "aci_name=$(aciName)" \
                       -var "mysql_server_name=$(mysqlServerName)" \
                       -var "mysql_admin_username=$(mysqlAdminUsername)" \
                       -var "mysql_admin_password=$(mysqlAdminPassword)" \
                       -var "docker_images=$(dockerImages)"
      workingDirectory: $(System.DefaultWorkingDirectory)/terraform
      displayName: 'Terraform Plan'

    - script: |
        terraform apply -auto-approve -var "resource_group_name=$(resourceGroupName)" \
                                        -var "location=$(location)" \
                                        -var "acr_name=$(acrName)" \
                                        -var "aks_cluster_name=$(aksClusterName)" \
                                        -var "aci_name=$(aciName)" \
                                        -var "mysql_server_name=$(mysqlServerName)" \
                                        -var "mysql_admin_username=$(mysqlAdminUsername)" \
                                        -var "mysql_admin_password=$(mysqlAdminPassword)" \
                                        -var "docker_images=$(dockerImages)"
      workingDirectory: $(System.DefaultWorkingDirectory)/terraform
      displayName: 'Terraform Apply'
